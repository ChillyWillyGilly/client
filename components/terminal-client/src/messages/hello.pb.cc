// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

#include "StdInc.h"
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hello.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_hello_2eproto() {
  delete HelloMessage::default_instance_;
  delete CloseAppMessage::default_instance_;
  delete MessagingSendDataMessage::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_hello_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_hello_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  HelloMessage::default_instance_ = new HelloMessage();
  CloseAppMessage::default_instance_ = new CloseAppMessage();
  MessagingSendDataMessage::default_instance_ = new MessagingSendDataMessage();
  HelloMessage::default_instance_->InitAsDefaultInstance();
  CloseAppMessage::default_instance_->InitAsDefaultInstance();
  MessagingSendDataMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hello_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hello_2eproto_once_);
void protobuf_AddDesc_hello_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hello_2eproto_once_,
                 &protobuf_AddDesc_hello_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hello_2eproto {
  StaticDescriptorInitializer_hello_2eproto() {
    protobuf_AddDesc_hello_2eproto();
  }
} static_descriptor_initializer_hello_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int HelloMessage::kNumberFieldNumber;
const int HelloMessage::kNumber2FieldNumber;
const int HelloMessage::kNameFieldNumber;
const int HelloMessage::kStuffFieldNumber;
#endif  // !_MSC_VER

HelloMessage::HelloMessage()
  : ::google::protobuf::MessageLite() , _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HelloMessage)
}

void HelloMessage::InitAsDefaultInstance() {
}

HelloMessage::HelloMessage(const HelloMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HelloMessage)
}

void HelloMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  number_ = 0;
  number2_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stuff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HelloMessage::~HelloMessage() {
  // @@protoc_insertion_point(destructor:HelloMessage)
  SharedDtor();
}

void HelloMessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stuff_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void HelloMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HelloMessage& HelloMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_hello_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_hello_2eproto();
#endif
  return *default_instance_;
}

HelloMessage* HelloMessage::default_instance_ = NULL;

HelloMessage* HelloMessage::New(::google::protobuf::Arena* arena) const {
  HelloMessage* n = new HelloMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloMessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HelloMessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(number_, number2_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_stuff()) {
      stuff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool HelloMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:HelloMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_number2;
        break;
      }

      // required int32 number2 = 2;
      case 2: {
        if (tag == 16) {
         parse_number2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number2_)));
          set_has_number2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // required string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stuff;
        break;
      }

      // required string stuff = 4;
      case 4: {
        if (tag == 34) {
         parse_stuff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stuff()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HelloMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HelloMessage)
  return false;
#undef DO_
}

void HelloMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HelloMessage)
  // required int32 number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  // required int32 number2 = 2;
  if (has_number2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number2(), output);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // required string stuff = 4;
  if (has_stuff()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stuff(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:HelloMessage)
}

int HelloMessage::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_number()) {
    // required int32 number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  if (has_number2()) {
    // required int32 number2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number2());
  }

  if (has_name()) {
    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_stuff()) {
    // required string stuff = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stuff());
  }

  return total_size;
}
int HelloMessage::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());

    // required int32 number2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number2());

    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string stuff = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stuff());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HelloMessage*>(&from));
}

void HelloMessage::MergeFrom(const HelloMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_number2()) {
      set_number2(from.number2());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_stuff()) {
      set_has_stuff();
      stuff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stuff_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void HelloMessage::CopyFrom(const HelloMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void HelloMessage::Swap(HelloMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloMessage::InternalSwap(HelloMessage* other) {
  std::swap(number_, other->number_);
  std::swap(number2_, other->number2_);
  name_.Swap(&other->name_);
  stuff_.Swap(&other->stuff_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string HelloMessage::GetTypeName() const {
  return "HelloMessage";
}


// ===================================================================

#ifndef _MSC_VER
const int CloseAppMessage::kReasonFieldNumber;
#endif  // !_MSC_VER

CloseAppMessage::CloseAppMessage()
  : ::google::protobuf::MessageLite() , _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CloseAppMessage)
}

void CloseAppMessage::InitAsDefaultInstance() {
}

CloseAppMessage::CloseAppMessage(const CloseAppMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CloseAppMessage)
}

void CloseAppMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CloseAppMessage::~CloseAppMessage() {
  // @@protoc_insertion_point(destructor:CloseAppMessage)
  SharedDtor();
}

void CloseAppMessage::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CloseAppMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CloseAppMessage& CloseAppMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_hello_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_hello_2eproto();
#endif
  return *default_instance_;
}

CloseAppMessage* CloseAppMessage::default_instance_ = NULL;

CloseAppMessage* CloseAppMessage::New(::google::protobuf::Arena* arena) const {
  CloseAppMessage* n = new CloseAppMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseAppMessage::Clear() {
  if (has_reason()) {
    reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool CloseAppMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:CloseAppMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string reason = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CloseAppMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CloseAppMessage)
  return false;
#undef DO_
}

void CloseAppMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CloseAppMessage)
  // required string reason = 1;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reason(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:CloseAppMessage)
}

int CloseAppMessage::ByteSize() const {
  int total_size = 0;

  // required string reason = 1;
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseAppMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CloseAppMessage*>(&from));
}

void CloseAppMessage::MergeFrom(const CloseAppMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reason()) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void CloseAppMessage::CopyFrom(const CloseAppMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseAppMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CloseAppMessage::Swap(CloseAppMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseAppMessage::InternalSwap(CloseAppMessage* other) {
  reason_.Swap(&other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CloseAppMessage::GetTypeName() const {
  return "CloseAppMessage";
}


// ===================================================================

#ifndef _MSC_VER
const int MessagingSendDataMessage::kNpidFieldNumber;
const int MessagingSendDataMessage::kDataFieldNumber;
#endif  // !_MSC_VER

MessagingSendDataMessage::MessagingSendDataMessage()
  : ::google::protobuf::MessageLite() , _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessagingSendDataMessage)
}

void MessagingSendDataMessage::InitAsDefaultInstance() {
}

MessagingSendDataMessage::MessagingSendDataMessage(const MessagingSendDataMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MessagingSendDataMessage)
}

void MessagingSendDataMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  npid_ = GOOGLE_ULONGLONG(0);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessagingSendDataMessage::~MessagingSendDataMessage() {
  // @@protoc_insertion_point(destructor:MessagingSendDataMessage)
  SharedDtor();
}

void MessagingSendDataMessage::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MessagingSendDataMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MessagingSendDataMessage& MessagingSendDataMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_hello_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_hello_2eproto();
#endif
  return *default_instance_;
}

MessagingSendDataMessage* MessagingSendDataMessage::default_instance_ = NULL;

MessagingSendDataMessage* MessagingSendDataMessage::New(::google::protobuf::Arena* arena) const {
  MessagingSendDataMessage* n = new MessagingSendDataMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessagingSendDataMessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    npid_ = GOOGLE_ULONGLONG(0);
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MessagingSendDataMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:MessagingSendDataMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed64 npid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &npid_)));
          set_has_npid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessagingSendDataMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessagingSendDataMessage)
  return false;
#undef DO_
}

void MessagingSendDataMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessagingSendDataMessage)
  // required fixed64 npid = 1;
  if (has_npid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->npid(), output);
  }

  // required bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:MessagingSendDataMessage)
}

int MessagingSendDataMessage::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_npid()) {
    // required fixed64 npid = 1;
    total_size += 1 + 8;
  }

  if (has_data()) {
    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  return total_size;
}
int MessagingSendDataMessage::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required fixed64 npid = 1;
    total_size += 1 + 8;

    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessagingSendDataMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MessagingSendDataMessage*>(&from));
}

void MessagingSendDataMessage::MergeFrom(const MessagingSendDataMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npid()) {
      set_npid(from.npid());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MessagingSendDataMessage::CopyFrom(const MessagingSendDataMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagingSendDataMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MessagingSendDataMessage::Swap(MessagingSendDataMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagingSendDataMessage::InternalSwap(MessagingSendDataMessage* other) {
  std::swap(npid_, other->npid_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MessagingSendDataMessage::GetTypeName() const {
  return "MessagingSendDataMessage";
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
